# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none

pool: 'pi'

parameters:
- name: ENV
  displayName: 'Which Environment to deploy to'
  type: string
  default: 'DEV'
  values:
  - 'DEV'
  - 'PROD'
- name: APPNAME
  displayName: 'App Name'
  type: string

variables:
  buildConfiguration: 'Release'
  WORKING_DIR: '$(System.DefaultWorkingDirectory)/infra/${{ lower(parameters.ENV) }}'

stages:
- stage: terraformOutput
  jobs:
  - job: build_publish
    displayName: 'Build and Publish'
    variables:
      appname: $[ dependencies.tf.outputs['setVariable.APPNAME'] ]
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        version: 7.x
        performMultiLevelLookup: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore $(buildConfiguration)'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
        vstsFeed: 'my-vsts-feed'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build $(buildConfiguration)'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish $(buildConfiguration)'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'service_connection'
        appType: 'webApp'
        appName: '${{ parameters.APPNAME }}'
        package: '$(Build.ArtifactStagingDirectory)/*.zip'
        deploymentMethod: 'auto'