
name: Deploy Terraform IAC

trigger: none

parameters:
- name: ENV
  displayName: 'Which Environment to deploy to'
  type: string
  default: 'DEV'
  values:
  - 'DEV'
  - 'PROD'
- name: LOCATION
  displayName: Resource Location
  type: string
  default: 'East US'
  values:
  - 'East US'
  - 'Central US'
- name: SKU
  displayName: 'App Service Plan SKU'
  type: string
  default: 'F1'
  values:
  - 'F1'
  - 'B1'
- name: APPNAME
  displayName: 'App Name'
  type: string

variables: 
  TF_VAR_APPNAME: ${{ parameters.APPNAME }}
  TF_VAR_ENV: ${{ parameters.ENV }}
  TF_VAR_LOCATION: ${{ parameters.LOCATION }}
  TF_VAR_SKU: ${{ parameters.SKU }}

stages:
- stage: DeployTerraform
  jobs:
  - job:
    displayName: 'Deploy Terraform'
    pool: 'pi'
    steps:
    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
        commandOptions: '-backend-config=backend.conf'
        backendServiceArm: 'service_connection'
        backendAzureRmResourceGroupName: 'tf-state'
        backendAzureRmStorageAccountName: 'tfstate0934934'
        backendAzureRmContainerName: 'tf-state'
        backendAzureRmKey: 'net-test-workspace/terraform.tfstate'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
        environmentServiceNameAzureRM: 'service_connection'
    
    - task: TerraformTaskV4@4
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
        environmentServiceNameAzureRM: 'service_connection'